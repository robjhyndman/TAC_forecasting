[{"path":"http://pkg.robjhyndman.com/TACforecasting/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer, copyright holder.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R (2023). TACforecasting: Forecasting Functions Transport Accident Commission. https://pkg.robjhyndman.com/TACforecasting/, https://github.com/robjhyndman/TACforecasting/.","code":"@Manual{,   title = {TACforecasting: Forecasting Functions for the Transport Accident Commission},   author = {Rob Hyndman},   year = {2023},   note = {https://pkg.robjhyndman.com/TACforecasting/, https://github.com/robjhyndman/TACforecasting/}, }"},{"path":"http://pkg.robjhyndman.com/TACforecasting/index.html","id":"tacforecasting","dir":"","previous_headings":"","what":"Forecasting Functions for the Transport Accident Commission","title":"Forecasting Functions for the Transport Accident Commission","text":"package provides functions help forecasting attendant care hours Transport Accident Commission.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Forecasting Functions for the Transport Accident Commission","text":"","code":"# First install the dependencies install.packages(c(\"tsibble\",\"fabletools\",\"abind\",\"distributional\",\"dplyr\",     \"forcats\",\"forecast\",\"furrr\",\"ggplot2\",\"hts\",\"janitor\",\"lubridate\",   \"MASS\",\"readr\",\"stringr\",\"tibble\",\"tidyr\",\"tsbox\",\"remotes\")) # Then install this package remotes::install_github(\"robjhyndman/TACforecasting\")"},{"path":"http://pkg.robjhyndman.com/TACforecasting/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Forecasting Functions for the Transport Accident Commission","text":"data included package example randomly generated. real data included repository.","code":"library(TACforecasting) library(dplyr) library(ggplot2) # Read data group_costs <- read_tac_data(   claims_file = \"data-raw/T086_claim_header.csv\",   costs_file = \"data-raw/T086_attendant_care_hours.csv\" ) # Plot total hours by billing period plot_total_hours(group_costs) # Plot total hours per age group by billing period plot_total_hours(group_costs, age_group, include_average = FALSE) +    ggtitle(\"Hours by age group in each billing period\") # Plot total hours per injury group by billing period plot_total_hours(group_costs, injury_group, include_average = FALSE) +    ggtitle(\"Hours by injury group in each billing period\") # Compute forecasts of total hours by age group and injury group # Keep back 2022 as test set fable_forecasts_hours <- group_costs |>      filter(billing_period <= as.Date(\"2021-12-31\")) |>      get_forecasts(h = 13, nsim = 200) # Plot forecasts of total hours plot_forecasts(fable_forecasts_hours, group_costs) # Plot forecasts of total hours by age group plot_forecasts(fable_forecasts_hours, group_costs, show_age_group = \"20-34\") +    ggtitle(\"Forecasts of total hours for 20-34 year olds\") # Plot forecasts of total hours by injury group plot_forecasts(fable_forecasts_hours, group_costs, show_injury_group = \"NONCAT\") +    ggtitle(\"Forecasts of total hours from NONCAT injuries claims\") # Compute accuracy statistics on the 2022 test set tac_accuracy(fable_forecasts_hours, group_costs) #> # A tibble: 13 × 6 #>        h   RMSE    MAE  MAPE coverage   CRPS #>    <int>  <dbl>  <dbl> <dbl>    <dbl>  <dbl> #>  1     1  8734.  8734. 13.6         1  4549. #>  2     2 11377. 11377. 18.0         1  5234. #>  3     3 14535. 14535. 24.4         1  7095. #>  4     4 55633. 55633. 42.7         0 46918. #>  5     5  6335.  6335.  7.67        1  7137. #>  6     6 10539. 10539. 12.4         1  8060. #>  7     7  6697.  6697.  9.55        1  4261. #>  8     8 27604. 27604. 51.8         1 12819. #>  9     9  9059.  9059. 10.2         1 10042. #> 10    10 27780. 27780. 47.9         1 10161. #> 11    11  2025.  2025.  2.64        1  4404. #> 12    12 36674. 36674. 65.5         1 10075. #> 13    13 48086. 48086. 78.2         1  7002. # Compute accuracy statistics on a rolling origin # (This takes a long time to run) tscv_accuracy(group_costs, h = 13, nsim = 200, init = 195, step = 6) |>    filter(!is.na(RMSE), h <= 24) |>   summarise(     RMSE = sqrt(mean(RMSE^2)),     MAE = mean(MAE),     MAPE = mean(MAPE),     Coverage = 100*mean(coverage),     CRPS = mean(CRPS),     .by = h   )  #> # A tibble: 13 × 6 #>        h   RMSE    MAE  MAPE Coverage   CRPS #>    <int>  <dbl>  <dbl> <dbl>    <dbl>  <dbl> #>  1     1 14632. 12606.  16.9    100    8585. #>  2     2 15476. 13430.  20.3     93.1  8650. #>  3     3 14358. 11845.  18.6     96.4  7707. #>  4     4 20249. 14351.  16.1     92.9 10747. #>  5     5 17135. 13264.  18.1     92.9  9194. #>  6     6 19022. 12874.  16.8     92.9  9702. #>  7     7 14318. 12238.  16.9    100    8404. #>  8     8 16845. 14858.  22.5     92.9  9093. #>  9     9 15683. 12777.  20.2     96.3  8134. #> 10    10 19521. 13922.  15.8     96.3 10651. #> 11    11 19320. 15070.  21.4     92.6  9697. #> 12    12 19836. 14594.  19.7     88.9  9942. #> 13    13 15915. 13276.  19.1    100    8145."},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/TACforecasting-package.html","id":null,"dir":"Reference","previous_headings":"","what":"TACforecasting: Forecasting Functions for the Transport Accident Commission — TACforecasting-package","title":"TACforecasting: Forecasting Functions for the Transport Accident Commission — TACforecasting-package","text":"Functions make hierarchical time series forecasts attendant care hours easier.","code":""},{"path":[]},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/TACforecasting-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TACforecasting: Forecasting Functions for the Transport Accident Commission — TACforecasting-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) [copyright holder]","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/get_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate forecasts of attendant care hours — get_forecasts","title":"Generate forecasts of attendant care hours — get_forecasts","text":"Generate forecasts ETS ARIMA models, reconcile , combine . Return fable object containing forecasts.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/get_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate forecasts of attendant care hours — get_forecasts","text":"","code":"get_forecasts(data, h, nsim)"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/get_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate forecasts of attendant care hours — get_forecasts","text":"data Data set computed read_tac_data h Forecast horizon. nsim Number simulated future sample paths per model.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/group_costs.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic data for attendant hours by age group and injury group — group_costs","title":"Synthetic data for attendant hours by age group and injury group — group_costs","text":"Artificial Transport Accident Commission attendant care data","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/group_costs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic data for attendant hours by age group and injury group — group_costs","text":"Time series class `tsibble`","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/group_costs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Synthetic data for attendant hours by age group and injury group — group_costs","text":"Synthetic data","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/group_costs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic data for attendant hours by age group and injury group — group_costs","text":"group_costs daily `tsibble` index `billing_period`  two values: data disaggregated using two keys:","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/group_costs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic data for attendant hours by age group and injury group — group_costs","text":"","code":"group_costs #> # A tsibble: 14,711 x 5 [28D] #> # Key:       age_group, injury_group [42] #>    billing_period age_group injury_group adjusted_hours nclaims #>    <date>         <fct>     <fct>                 <dbl>   <dbl> #>  1 1995-01-15     0-9       ABI - H               8643.       5 #>  2 1995-02-12     0-9       ABI - H               1065.       5 #>  3 1995-03-12     0-9       ABI - H                564.       5 #>  4 1995-04-09     0-9       ABI - H                768.       5 #>  5 1995-05-07     0-9       ABI - H               1682.       5 #>  6 1995-06-04     0-9       ABI - H               1066.       5 #>  7 1995-07-02     0-9       ABI - H                660.       5 #>  8 1995-07-30     0-9       ABI - H               1214.       5 #>  9 1995-08-27     0-9       ABI - H               2679.       5 #> 10 1995-09-24     0-9       ABI - H               1548.       5 #> # ℹ 14,701 more rows"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot forecasts of attendant care hours disaggregated by age or injury group. — plot_forecasts","title":"Plot forecasts of attendant care hours disaggregated by age or injury group. — plot_forecasts","text":"Produce time plot attendant care hours per billing period specific disaggregations.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot forecasts of attendant care hours disaggregated by age or injury group. — plot_forecasts","text":"","code":"plot_forecasts(   forecasts,   data,   show_age_group = \"<aggregated>\",   show_injury_group = \"<aggregated>\" )"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot forecasts of attendant care hours disaggregated by age or injury group. — plot_forecasts","text":"forecasts fable object created get_forecasts data data used construct forecasts. tsibble object form group_costs. show_age_group character string specifying either specific age group \"<aggregated>\" meaning total across age groups. show_injury_group character string specifying either specific injury group \"<aggregated>\" meaning total across injury groups.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_forecasts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot forecasts of attendant care hours disaggregated by age or injury group. — plot_forecasts","text":"Rob J Hyndman","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_forecasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot forecasts of attendant care hours disaggregated by age or injury group. — plot_forecasts","text":"","code":"if (FALSE) {   group_costs |>      get_forecasts(h=13, nsim=100) |>      plot_forecasts(group_costs) }"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_total_hours.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot attendant care hours disaggregated by age or injury group. — plot_total_hours","title":"Plot attendant care hours disaggregated by age or injury group. — plot_total_hours","text":"Produce time plot attendant care hours per billing period disaggregated given `variable`","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_total_hours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot attendant care hours disaggregated by age or injury group. — plot_total_hours","text":"","code":"plot_total_hours(group_costs, variable = NULL, include_average = TRUE)"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_total_hours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot attendant care hours disaggregated by age or injury group. — plot_total_hours","text":"group_costs tsibble containing costs optionally split variable variable Name disaggregation variable. NULL, aggregated costs shown include_average average cost per billing period shown?","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_total_hours.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot attendant care hours disaggregated by age or injury group. — plot_total_hours","text":"Rob J Hyndman","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/plot_total_hours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot attendant care hours disaggregated by age or injury group. — plot_total_hours","text":"","code":"group_costs |>      plot_total_hours(age_group)"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/read_tac_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in TAC data — read_tac_data","title":"Read in TAC data — read_tac_data","text":"function takes two csv files inputs: one containing claims header containing attendant hours. returns total hours per age group injury group billing period.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/read_tac_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in TAC data — read_tac_data","text":"","code":"read_tac_data(claims_file, costs_file)"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/read_tac_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in TAC data — read_tac_data","text":"claims_file CSV file containing claims header costs_file CSV file containing attendant hours","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/read_tac_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in TAC data — read_tac_data","text":"tsibble object containing total attendant care adjusted hours billing period, disaggregated age group injury group. column `nclaims` shows number \"active\" claims billing period.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/read_tac_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read in TAC data — read_tac_data","text":"Rob J Hyndman","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/read_tac_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in TAC data — read_tac_data","text":"","code":"if (FALSE) { group_costs <- read_tac_data(   claims_file = \"T086_claim_header.csv\",   costs_file = \"T086_attendant_care_hours.csv\" ) }"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tac_accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute accuracy statistics — tac_accuracy","title":"Compute accuracy statistics — tac_accuracy","text":"Compute accuracy statistics","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tac_accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute accuracy statistics — tac_accuracy","text":"","code":"tac_accuracy(forecasts, actuals)"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tac_accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute accuracy statistics — tac_accuracy","text":"forecasts fable object forecasts, usually output get_forecasts actuals tsibble actual values.  example, output read_tac_data","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tac_accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute accuracy statistics — tac_accuracy","text":"tibble accuracy statistics","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tscv_accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute forecasts with a rolling origin and return accuracy statistics — tscv_accuracy","title":"Compute forecasts with a rolling origin and return accuracy statistics — tscv_accuracy","text":"Compute forecasts rolling origin return accuracy statistics","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tscv_accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute forecasts with a rolling origin and return accuracy statistics — tscv_accuracy","text":"","code":"tscv_accuracy(group_costs, h, nsim, init, step)"},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tscv_accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute forecasts with a rolling origin and return accuracy statistics — tscv_accuracy","text":"group_costs tsibble actual values. example, output read_tac_data h forecast horizon nsim number simulations used forecast model. init number initial observations use first fold. step number observations skip fold.","code":""},{"path":"http://pkg.robjhyndman.com/TACforecasting/reference/tscv_accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute forecasts with a rolling origin and return accuracy statistics — tscv_accuracy","text":"tibble accuracy statistics.","code":""}]
